
html body {
	margin: 0px;
}

.container {
	display: flex;
	justify-content: space-between;
	background: #ccc;
	flex-wrap: wrap;
	align-items: center;
	flex:1 0 10px;

}
.nav-title h1 {
	background: blue; 
	display: flex;
	justify-content: center;
	align-items: center;
	padding-left: 50px; 
	color: red;
	
}
.nav-bar ul{
	display: flex;
	background: yellow;
}
.nav-bar ul li {
	display: flex;

	align-items: center;
	list-style-type: none;
	padding-right: 15px;
}

@media (max-width: 400px) {
	.container {
		background: linear-gradient(rgba(53, 56, 61, 1),rgba(234, 236, 239, 1));
		display: flex;
		justify-content: center;
		align-content: center;
	}
	

}
@media (max-width: 400px) {
	.nav-bar {
		display: flex;
		justify-content: space-around;
	}
	
}



	/*Properties of flex
	flex-direction: row or column;
 	justify-content: flex-start, center, flex-end;
 	align-items: flex-start, center, flex-end;
	flex-wrap, nowrap, wrap, wrapreverse;
	flex-shrink: value 1,2,3, or 10, 1000.
	flex-grow: value= 1, 2, 3, 100 or 1000;
	flex: basis: value= px, em, %, etc.;

	Flex Shorthand property.
	ex.
	flex: 1 0 10px;
	will set the item to
	flex-grow: 1;, flex-shrink: 0;, flex-basis: 10px;

	Order property. 
	tell css the order flex items appear in flex container.
	the property takes numbers as value, and negative numbers can be use.

	align-self
	The final property for flex items is align-self. This property 
	allows you to adjust each item's alignment individually, instead of setting them all at once. 
	This is useful since other common adjustment techniques using the CSS properties float, clear, 
	and vertical-align do not work on flex items.


	 */
